install.packages(c("rmarkdown","rticles","tinytex","knitr","visdat"),dependencies = T)
install.packages("languageserver")
install.packages(c("install.packages(c("rmarkdown"", ""rticles"", ""tinytex"", ""knitr"", ""visdat")", "dependencies", "=", "T)"))
install.packages(c("rmarkdown","rticles","tinytex","knitr","visdat"),dependencies = T)
install.packages(c("rmarkdown", "rticles", "tinytex", "knitr", "visdat"), dependencies = T)
install.packages(c("rmarkdown","rticles","tinytex","knitr","visdat"),dependencies = T)
install.packages(c("rmarkdown", "rticles", "tinytex", "knitr", "visdat"), dependencies = T)
datos <- read.csv("rentBike_data.csv",sep = ",",header = TRUE)
setwd("D:/UNAB/MINERIA DE DATOS/AE3")
datos <- read.csv("rentBike_data.csv",sep = ",",header = TRUE)
datos2 = datos[,-c(1, 12, 13, 14)]
selectrows <- sample(1:nrow(datos2),round(0.80*nrow(datos2)))
dat.train <- datos2[selectrows,]
dat.test <- datos2[-selectrows,]
##gráfico comparativo
all.predR<-data.frame(nobs=1:length(dat.test$Rented_Bike_Count),obs=dat.test$Rented_Bike_Count,LM=pred.lm,DT=pred.dt,NN=pred.nn,KNN=pred.knn)
#Regresión Lineal Múltiple
st.time<-Sys.time()
fitR.lm <- train(Rented_Bike_Count~., data=dat.train, method="lm", metric="RMSE", trControl=control)
end.time<- Sys.time()
selectrows <- sample(1:nrow(datos2),round(0.80*nrow(datos2)))
dat.train <- datos2[selectrows,]
dat.test <- datos2[-selectrows,]
library(ggplot2)
library(class)
library(caret)
library(e1071)
library(FNN)
library(MASS)
library(tidyverse)
library(visdat)#tipos de variables
library(dlookr)#resumen medidas estadísticas
library(funModeling)
library(flextable)
library(inspectdf)
library(qqplotr)
library(ggpmisc)
library(PerformanceAnalytics)
library(corrplot)
library(VIM) #datos faltantes
library(mice)
library(knitr)
library(MASS)
control <- trainControl(method="cv", number=10)
set.seed(7)
st.time<-Sys.time()
fitR.lm <- train(Rented_Bike_Count~., data=dat.train, method="lm", metric="RMSE", trControl=control)
end.time<- Sys.time()
tim.lm<-end.time-st.time
tim.lm
st.time<-Sys.time()
fitR.dt <- train(Rented_Bike_Count~., data=dat.train, method="rpart", metric="RMSE", trControl=control,na.action=na.omit,tuneLength=5)
end.time<-Sys.time()
tim.dt<-end.time-st.time
tim.dt
st.time<-Sys.time()
fitR.nn <- train(Rented_Bike_Count~., data=dat.train,
method = "nnet",metric="RMSE",trControl = control,linout=TRUE,
preProcess=c("scale","center"),na.action = na.omit,trace=F,maxit = 1000,tunelength=9)
end.time<-Sys.time()
tim.nn<-end.time-st.time
tim.nn
st.time<-Sys.time()
fitR.knn <- train(Rented_Bike_Count~., data=dat.train, method="knn", metric="RMSE",
linout=TRUE, preProcess=c("scale","center"), trControl=control,na.action=na.omit)
end.time<-Sys.time()
tim.knn<-end.time-st.time
tim.knn
time.all<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),
"i5-10400F"=c(tim.lm,tim.dt,tim.nn,tim.knn)
)
library(flextable)
time.all%>% flextable()
#tiempo cada algoritmo (agregar de cada estudiantes)
time.all<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),
"i5 - 10400F"=c(0.3065441,0.600831,74.04228,1.12795),
"i5 - 9600K"=c(0.3017712,0.8425839,87.6566629,1.0725100),
"Pentium Gold - 7505"=c(6.085204,1.45144 ,185.8563,1.0725100),
"i5-1135G7" =c(0.514946, 1.295549, 129.92616,2.122676)
)
library(flextable)
time.all%>% flextable()
##gráfico comparativo
list_reg<-list(lm=fitR.lm,dt=fitR.dt, nn=fitR.nn,knn=fitR.knn)
all_reg <- resamples(list_reg)
summary(all_reg)
dotplot(all_reg,scales="free")
##gráfico comparativo
list_reg<-list(lm=fitR.lm,dt=fitR.dt, nn=fitR.nn,knn=fitR.knn)
all_reg <- resamples(list_reg)
summary(all_reg)
dotplot(all_reg,scales="free")
tim.lm
tim.dt
tim.nn
tim.knn
time.all<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),
"i5-10400F"=c(tim.lm,tim.dt,tim.nn,tim.knn)
)
library(flextable)
time.all%>% flextable()
##gráfico comparativo
list_reg<-list(lm=fitR.lm,dt=fitR.dt, nn=fitR.nn,knn=fitR.knn)
all_reg <- resamples(list_reg)
summary(all_reg)
dotplot(all_reg,scales="free")
##Predicción
med.reg<-function(obs,pred){
e = obs-pred
bias = mean(e)
mse = mean((e)^2)
mae = mean(abs(e))
rmse = sqrt(mse)
R2 = 1-(sum((e)^2)/sum((obs-mean(obs))^2))
medidas = data.frame(bias,mse,mae,rmse,R2)
medidas
}
pred.lm<-predict(fitR.lm,dat.test)
val.lm<-med.reg(dat.test$Rented_Bike_Count,pred.lm)
pred.dt<-predict(fitR.dt,dat.test)
val.dt<-med.reg(dat.test$Rented_Bike_Count,pred.dt)
pred.nn<-predict(fitR.nn,dat.test)
val.nn<-med.reg(dat.test$Rented_Bike_Count,pred.nn)
pred.knn<-predict(fitR.knn,dat.test)
val.knn<-med.reg(dat.test$Rented_Bike_Count,pred.knn)
all.medR<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),rbind(val.lm,val.dt,val.nn,val.knn))
all.medR%>% flextable()
##gráfico comparativo
list_reg<-list(lm=fitR.lm,dt=fitR.dt, nn=fitR.nn,knn=fitR.knn)
all_reg <- resamples(list_reg)
summary(all_reg)
dotplot(all_reg,scales="free")
datos <- read.csv("rentBike_data.csv",sep = ",",header = TRUE)
datos2 = datos[,-c(1, 12, 13, 14)]
selectrows <- sample(1:nrow(datos2),round(0.80*nrow(datos2)))
dat.train <- datos2[selectrows,]
dat.test <- datos2[-selectrows,]
control <- trainControl(method="cv", number=10)
set.seed(17)
st.time<-Sys.time()
fitR.lm <- train(Rented_Bike_Count~., data=dat.train, method="lm", metric="RMSE", trControl=control)
end.time<- Sys.time()
tim.lm<-end.time-st.time
tim.lm
st.time<-Sys.time()
fitR.dt <- train(Rented_Bike_Count~., data=dat.train, method="rpart", metric="RMSE", trControl=control,na.action=na.omit,tuneLength=5)
end.time<-Sys.time()
tim.dt<-end.time-st.time
tim.dt
t.time<-Sys.time()
fitR.nn <- train(Rented_Bike_Count~., data=dat.train,
method = "nnet",metric="RMSE",trControl = control,linout=TRUE,
preProcess=c("scale","center"),na.action = na.omit,trace=F,maxit = 1000,tunelength=9)
end.time<-Sys.time()
tim.nn<-end.time-st.time
tim.nn
st.time<-Sys.time()
fitR.knn <- train(Rented_Bike_Count~., data=dat.train, method="knn", metric="RMSE",
linout=TRUE, preProcess=c("scale","center"), trControl=control,na.action=na.omit)
end.time<-Sys.time()
tim.knn<-end.time-st.time
tim.knn
time.all<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),
"i5-10400F"=c(tim.lm,tim.dt,tim.nn,tim.knn)
)
library(flextable)
time.all%>% flextable()
##gráfico comparativo
list_reg<-list(lm=fitR.lm,dt=fitR.dt, nn=fitR.nn,knn=fitR.knn)
all_reg <- resamples(list_reg)
summary(all_reg)
dotplot(all_reg,scales="free")
##Predicción
med.reg<-function(obs,pred){
e = obs-pred
bias = mean(e)
mse = mean((e)^2)
mae = mean(abs(e))
rmse = sqrt(mse)
R2 = 1-(sum((e)^2)/sum((obs-mean(obs))^2))
medidas = data.frame(bias,mse,mae,rmse,R2)
medidas
}
pred.lm<-predict(fitR.lm,dat.test)
val.lm<-med.reg(dat.test$Rented_Bike_Count,pred.lm)
pred.dt<-predict(fitR.dt,dat.test)
val.dt<-med.reg(dat.test$Rented_Bike_Count,pred.dt)
pred.nn<-predict(fitR.nn,dat.test)
val.nn<-med.reg(dat.test$Rented_Bike_Count,pred.nn)
pred.knn<-predict(fitR.knn,dat.test)
val.knn<-med.reg(dat.test$Rented_Bike_Count,pred.knn)
all.medR<-data.frame(Algoritmos=c("LM","DT","NN","KNN"),rbind(val.lm,val.dt,val.nn,val.knn))
all.medR%>% flextable()
##gráficos
plot.predlm<-ggplot(dat.test,aes(x=Rented_Bike_Count,y=pred.lm))+
geom_point()+
geom_line(aes(x=Rented_Bike_Count, y=Rented_Bike_Count),linetype="dashed",col=2)+
labs(x = "Observaciones", y = "Predicciones")+
theme(text = element_text(size=14))+
theme_grey(base_size = 16)+ggtitle("LM")
plot.preddt<-ggplot(dat.test,aes(x=Rented_Bike_Count,y=pred.dt))+
geom_point()+
geom_line(aes(x=Rented_Bike_Count, y=Rented_Bike_Count),linetype="dashed",col=2)+
labs(x = "Observaciones", y = "Predicciones")+
theme(text = element_text(size=14))+
theme_grey(base_size = 16)+ggtitle("DT")
plot.prednn<-ggplot(dat.test,aes(x=Rented_Bike_Count,y=pred.nn))+
geom_point()+
geom_line(aes(x=Rented_Bike_Count, y=Rented_Bike_Count),linetype="dashed",col=2)+
labs(x = "Observaciones", y = "Predicciones")+
theme(text = element_text(size=14))+
theme_grey(base_size = 16)+ggtitle("NN")
plot.predknn<-ggplot(dat.test,aes(x=Rented_Bike_Count,y=pred.knn))+
geom_point()+
geom_line(aes(x=Rented_Bike_Count, y=Rented_Bike_Count),linetype="dashed",col=2)+
labs(x = "Observaciones", y = "Predicciones")+
theme(text = element_text(size=14))+
theme_grey(base_size = 16)+ggtitle("KNN")
library(gridExtra)
grid.arrange(plot.predlm, plot.preddt,plot.prednn,plot.predknn, ncol = 2)
##gráfico comparativo
all.predR<-data.frame(nobs=1:length(dat.test$Rented_Bike_Count),obs=dat.test$Rented_Bike_Count,LM=pred.lm,DT=pred.dt,NN=pred.nn,KNN=pred.knn)
ggplot(data=all.predR)+
geom_line(aes(x=nobs,y=LM,color="LM"))+
geom_line(aes(x=nobs,y=DT,color="DT"))+
geom_line(aes(x=nobs,y=NN,color="NN"))+
geom_line(aes(x=nobs,y=KNN,color="KNN"))+
geom_line(aes(x=nobs,y=obs,color="Obs"))+
labs(x = " ", y = "MEDV",)+
scale_color_manual(name = " ",values = c(
'Obs' = 'darkblue',
'LM' = 'red',
'DT' = 'pink',
'NN' = 'orange',
'KNN' = 'green')) +
theme(text = element_text(size=14))+
theme_grey(base_size = 16)
# Clasificación k-NN
##Ejemplo 1-Iris data
dej1 <- iris
dim(dej1)
str(dej1)
funModeling::freq(dej1$Species)
#####################
## Comparar algoritmos Regresión
# prepare resampling method
control <- trainControl(method="cv", number=10)
set.seed(7)
#Regresión Lineal Múltiple
st.time<-Sys.time()
fitR.lm <- train(medv~., data=dat.train, method="lm", metric="RMSE", trControl=control)
end.time<- Sys.time()
tim.lm<-end.time-st.time
View(datos2)
View(datos2)
View(datos)
View(datos)
